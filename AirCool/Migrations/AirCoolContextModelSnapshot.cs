// <auto-generated />
using System;
using AirCool.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirCool.Migrations
{
    [DbContext(typeof(AirCoolContext))]
    partial class AirCoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AirCool.Domain.Entities.Departamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdExterno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("IdPai")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdPai");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("AirCool.Domain.Entities.Empresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEndereco")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdExterno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("AirCool.Domain.Entities.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdExterno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("IdPai")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdPai")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("AirCool.Domain.Entities.Resultado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("IdDepartamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdExterno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("IdPai")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeVotos")
                        .HasColumnType("int");

                    b.Property<decimal>("TemperaturaFinal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TemperaturaInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("VotacaoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VotacaoId");

                    b.ToTable("Resultados");
                });

            modelBuilder.Entity("AirCool.Domain.Entities.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("DepartamentoId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("DepartamentoIdExterno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdExterno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("IdPai")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("IdPai");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AirCool.Domain.Entities.VotacaoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataFinalVotacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicioVotacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DepartamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdExterno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("IdPai")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Temperatura")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdPai");

                    b.ToTable("Votacoes");
                });

            modelBuilder.Entity("AirCool.Domain.Entities.Departamento", b =>
                {
                    b.HasOne("AirCool.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Departamento")
                        .HasForeignKey("IdPai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AirCool.Domain.Entities.Endereco", b =>
                {
                    b.HasOne("AirCool.Domain.Entities.Empresa", "Empresa")
                        .WithOne("Endereco")
                        .HasForeignKey("AirCool.Domain.Entities.Endereco", "IdPai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AirCool.Domain.Entities.Resultado", b =>
                {
                    b.HasOne("AirCool.Domain.Entities.VotacaoEntity", "Votacao")
                        .WithMany()
                        .HasForeignKey("VotacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Votacao");
                });

            modelBuilder.Entity("AirCool.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("AirCool.Domain.Entities.Departamento", "Departamento")
                        .WithMany("Usuario")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirCool.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdPai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AirCool.Domain.Entities.VotacaoEntity", b =>
                {
                    b.HasOne("AirCool.Domain.Entities.Departamento", "Departamento")
                        .WithMany("Votacoes")
                        .HasForeignKey("IdPai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirCool.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Votacoes")
                        .HasForeignKey("IdPai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AirCool.Domain.Entities.Departamento", b =>
                {
                    b.Navigation("Usuario");

                    b.Navigation("Votacoes");
                });

            modelBuilder.Entity("AirCool.Domain.Entities.Empresa", b =>
                {
                    b.Navigation("Departamento");

                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("Usuarios");

                    b.Navigation("Votacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
